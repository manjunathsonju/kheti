<div id="may-advanced-options" class="hidden">
<div class="product-options">
{% if may_advanced_options %}
<input type="hidden" name="option[model]" value=""/>
<input type="hidden" name="option[sku]" value=""/>
<input type="hidden" name="option[upc]" value=""/>
<input type="hidden" name="option[ean]" value=""/>
<input type="hidden" name="option[jan]" value=""/>
<input type="hidden" name="option[isbn]" value=""/>
<input type="hidden" name="option[mpn]" value=""/>
<input type="hidden" name="option[location]" value=""/>
<input type="hidden" name="option[dimension_l]" value=""/>
<input type="hidden" name="option[dimension_w]" value=""/>
<input type="hidden" name="option[dimension_h]" value=""/>
<input type="hidden" name="option[length_unit]" value="{{ length_unit }}"/>
<input type="hidden" name="option[weight]" value=""/>
<input type="hidden" name="option[weight_unit]" value="{{ weight_unit }}"/>
<input type="hidden" name="option[image]" value=""/>
{% if not options or options|length == 0 %}
<hr>
<h3>{{ text_option }}</h3>
{% endif %}
{% for option in may_advanced_options %}
<div class="form-group{{ option['required'] ? ' required' : '' }} type-{{ may_advanced_options_config['swatches'] ? 'swatches' : option['type'] }} may-advanced-option-level-{{ (option['advanced_option_id']|split('-'))|length }} {{ option['init_visible'] ? 'visible' : 'hidden' }}" data-advanced-option-id="{{ option['advanced_option_id'] }}">
{% if not may_advanced_options_config['swatches'] %}
{% if option['type'] == 'select' %}
  <label class="control-label" for="input-option{{ option['product_option_id'] }}">{{ option['name'] }}</label>
  <select for="#option-{{ option['product_option_id'] }}" id="input-option{{ option['product_option_id'] }}" data-advanced-option-id="{{ option['advanced_option_id'] }}" class="form-control may-advanced-option" {{ option['init_disable'] ? 'disabled' : '' }}>
    <option value="">{{ text_select }}</option>
    {% for option_value in option['product_option_value'] %}
    <option value="{{ option_value['product_option_value_id'] }}" data-advanced-option-id="{{ option['advanced_option_id'] }}" data-option-value-id="{{ option_value['option_value_id'] }}" data-option-value='{{ option_value|json_encode|escape }}'>{{ option_value['name'] }}
    {% if may_advanced_options_config['show_option_price'] and option_value['price'] %}
    ({{ option_value['price_prefix'] }}{{ option_value['price'] }})
    {% endif %}
    </option>
    {% endfor %}
  </select>
{% endif %}
{% if option['type'] == 'radio' %}
  <label class="control-label">{{ option['name'] }}</label>
  <div id="input-option{{ option['product_option_id'] }}">
    {% for option_value in option['product_option_value'] %}
    <div class="radio">
      <label>
        <input type="radio" name="may_advanced_option_{{ option['product_option_id'] }}" for="#option-{{ option['product_option_id'] }}" value="{{ option_value['product_option_value_id'] }}" data-advanced-option-id="{{ option['advanced_option_id'] }}" data-option-value-id="{{ option_value['option_value_id'] }}" class="may-advanced-option" {% if option_value['product_images'] %}data-option-value-image-origin="{{ option_value['product_images'][0]['origin'] }}" data-option-value-image-popup="{{ option_value['product_images'][0]['popup'] }}" data-option-value-image-thumb="{{ option_value['product_images'][0]['thumb'] }}"{% endif %} {{ option['init_disable'] ? 'disabled' : '' }}  data-option-value='{{ option_value|json_encode|escape }}'/>
        {% if option_value['image'] %}
        <img src="{{ option_value['image'] }}" alt="{{ option_value['name'] }}{{ option_value['price'] ? " #{option_value['price_prefix']}#{option_value['price']}" : '' }}" class="img-thumbnail" /> 
        {% endif %}
        {{ option_value['name'] }}
        {% if may_advanced_options_config['show_option_price'] and option_value['price'] %}
        ({{ option_value['price_prefix'] }}{{ option_value['price'] }})
        {% endif %}
      </label>
    </div>
    {% endfor %}
  </div>
{% endif %}
{% else %}
  <label class="control-label">{{ option['name'] }}&nbsp;<span class="selected-option-label"></span></label>
  <div id="input-option{{ option['product_option_id'] }}" class="may-swatches">
    {% for option_value in option['product_option_value'] %}
      <label>
        <input type="radio" data-label="{{ option_value['name'] }}{% if may_advanced_options_config['show_option_price'] %}{{ (option_value['price']) ? "#{option_value['price_prefix']}#{option_value['price']}" : '' }}{% endif %}" name="may_advanced_option_{{ option['product_option_id'] }}" for="#option-{{ option['product_option_id'] }}" value="{{ option_value['product_option_value_id'] }}" data-advanced-option-id="{{ option['advanced_option_id'] }}" data-option-value-id="{{ option_value['option_value_id'] }}" class="may-advanced-option"  {% if option_value['product_images'] %}data-option-value-image-origin="{{ option_value['product_images'][0]['origin'] }}" data-option-value-image-popup="{{ option_value['product_images'][0]['popup'] }}" data-option-value-image-thumb="{{ option_value['product_images'][0]['thumb'] }}"{% endif %} {{ option['init_disable'] ? 'disabled' : '' }} data-option-value='{{ option_value|json_encode|escape }}'/>
        {% if may_advanced_options_config['swatch_image'] and option_value['product_images'] %}
        <img src="{{ option_value['product_images'][0]['thumb'] }}" alt="{{ option_value['name'] }}{{ option_value['price'] ? " #{option_value['price_prefix']}#{option_value['price']}" : '' }}" class="img-thumbnail" /> 
        {% elseif option_value['image'] %}
        <img src="{{ option_value['image'] }}" alt="{{ option_value['name'] }}{{ option_value['price'] ? "#{option_value['price_prefix']}#{option_value['price']}" : '' }}" class="img-thumbnail" /> 
        {% else %}
        <span>
        {{ option_value['name'] }}
        {% if may_advanced_options_config['show_option_price'] and option_value['price'] %}
        ({{ option_value['price_prefix'] }}{{ option_value['price'] }})
        {% endif %}
        </span>
        {% endif %}
      </label>
    {% endfor %}
  </div>
{% endif %}
<input type="hidden" name="option[{{ option['product_option_id'] }}]" id="option-{{ option['product_option_id'] }}" />
</div>
{% endfor %}
{% endif %}
</div>
</div>
{% if may_advanced_options_config['swatches'] %}
<style type="text/css">
{{ may_advanced_options_config['swatch_css'] }}
</style>
<style id="may-advanced-options-swatch-style">
.may-swatches input[type=radio] + img,
.may-swatches input[type=radio] + span {
	border: {{ may_advanced_options_config['swatch_style_border_width'] }}px solid #{{ may_advanced_options_config['swatch_style_border_color_default'] }};
	min-width: {{ may_advanced_options_config['swatch_style_size_width'] }}px;
	height: {{ may_advanced_options_config['swatch_style_size_height'] }}px;
	border-radius: {{ may_advanced_options_config['swatch_style_size_radius'] }}px;
}
.may-swatches input[type=radio] + img {
	max-width: {{ may_advanced_options_config['swatch_style_size_width'] }}px;
	padding: {{ may_advanced_options_config['swatch_style_space_padding'] }}px;
}
.may-swatches input[type=radio] + span {
	padding: {{ may_advanced_options_config['swatch_style_space_padding'] + 4 }}px;
	line-height: {{ may_advanced_options_config['swatch_style_size_height'] - may_advanced_options_config['swatch_style_space_padding'] * 2 - 8 }}px;
}
.may-swatches input[type=radio]:enabled + img:hover,
.may-swatches input[type=radio]:enabled + span:hover,
.may-swatches input[type=radio]:checked + img,
.may-swatches input[type=radio]:checked + span {
	border-color: #{{ may_advanced_options_config['swatch_style_border_color_selected'] }};
}
</style>
{% endif %}
<script type="text/javascript"><!--
{% if not options or options|length == 0 %}
	if ($('#product').length) {
		$('#product').prepend($('#may-advanced-options').html());
	}
{% else %}
	if ($($('#product [id^=\'input-option\']').get({{ options|length - 1 }})).length) {
		$($('#product [id^=\'input-option\']').get({{ options|length - 1 }})).parentsUntil('#product', 'div.form-group').after($('#may-advanced-options').html());
	}
{% endif %}
$('#may-advanced-options').remove();

Journal['quickviewPageStylePriceUpdate'] = false;
Journal['productPageStylePriceUpdate'] = false;

var may_option_value_quantity = -1;
$(document).delegate('.may-advanced-option', 'change', function(event) {
	$($(this).attr('for')).val($(this).val());

	var $selected_option;
	var visible_option_advanced_id;

	var advanced_option_id = $(this).data('advanced-option-id');
	var advanced_option_level = (typeof advanced_option_id == 'string') ? advanced_option_id.split('-').length : 1;

	if ($('div.may-advanced-option-level-' + (advanced_option_level + 1) + '[data-advanced-option-id^=\'' + advanced_option_id + '\']').length) {
		while ($('div.may-advanced-option-level-' + (advanced_option_level + 1) + '[data-advanced-option-id^=\'' + advanced_option_id + '\']').length) {
			if ($('div.visible.may-advanced-option-level-' + advanced_option_level).length) {
				if ($('div.visible.may-advanced-option-level-' + advanced_option_level).hasClass('type-select')) {
					$selected_option = $('div.visible.may-advanced-option-level-' + advanced_option_level + ' .may-advanced-option option:selected');
					if (!$selected_option.length) {
						$selected_option = $('div.visible.may-advanced-option-level-' + advanced_option_level + ' .may-advanced-option option:first');
					}
				} else {
					$selected_option = $('div.visible.may-advanced-option-level-' + advanced_option_level + ' .may-advanced-option:checked');
					if (!$selected_option.length) {
						$selected_option = $('div.visible.may-advanced-option-level-' + advanced_option_level + ' .may-advanced-option:first');
					}
				}
			}

			if (typeof $selected_option.data('advanced-option-id') !== 'undefined') {
				visible_option_advanced_id = $selected_option.data('advanced-option-id') + '-' + $selected_option.data('option-value-id');
			} else {
				visible_option_advanced_id = $('div.may-advanced-option-level-' + (advanced_option_level + 1) + '[data-advanced-option-id^=\'' + visible_option_advanced_id + '-\']:first').data('advanced-option-id');
			}

			$('div.may-advanced-option-level-' + (advanced_option_level + 1)).each(function(index) {
				if ($(this).data('advanced-option-id') == visible_option_advanced_id) {
					$(this).find('.may-advanced-option').prop('disabled', false);
					$(this).removeClass('hidden');
					$(this).addClass('visible');

					var $selected_option_value;
					if ($(this).hasClass('type-select')) {
						$selected_option_value = $(this).find('.may-advanced-option option:selected');
					} else {
						$selected_option_value = $(this).find('.may-advanced-option:checked');
					}

					if ($selected_option_value.length) {
						$(this).find('input[type=\'hidden\']').val($selected_option_value.val());
					} else {
						$(this).find('input[type=\'hidden\']').val(0);
					}
				} else {
					$(this).find('.may-advanced-option').prop('disabled', true);
					$(this).find('input[type=\'hidden\']').val(-1);
					$(this).removeClass('visible');
					$(this).addClass('hidden');
				}
			});

			advanced_option_level ++;
		}
	} else {
		$selected_option = $(this);
	}

	var advanced_option_elements = $('div.visible').get().reverse();

	var currency_position = "{{ currency['symbol_position'] }}";
	var currency_symbol = "{{ currency['symbol'] }}";
	var currency_decimal_place = "{{ currency['decimal_place'] }}";
	var decimal_point = "{{ currency['decimal_point'] }}";
	var thousand_point = "{{ currency['thousand_point'] }}";

	var convertPriceStringToNumber = function(str) {
		var result = str.replace(currency_symbol, "");
		result = result.split(thousand_point).join('');
		result = result.replace(decimal_point, '');
		result = parseFloat(result) / Math.pow(10, currency_decimal_place);
		return result;
	}

	var convertNumberToString = function(number, decimal_place) {
		numberInt = Math.floor(number);
		numberDecimal = Math.round((number - numberInt) * Math.pow(10, decimal_place)) + Math.pow(10, decimal_place);
		return numberInt.toString().replace(/\B(?=(\d{3})+(?!\d))/g, thousand_point) + decimal_point + numberDecimal.toString().substring(1);
	}

	var convertPriceNumberToString = function(number) {
		var result = convertNumberToString(number, currency_decimal_place);
		if (currency_position == "left") {
			result = currency_symbol + result;
		} else {
			result = result + currency_symbol;
		}

		return result;
	}


	var price = convertPriceStringToNumber("{{ price }}");
	var special = convertPriceStringToNumber("{{ special }}");
	var base_price = convertPriceStringToNumber("{{ tax }}");

	var point = parseInt("{{ reward ? reward : 0 }}");
	var weight = parseFloat("{{ weight_value ? weight_value : 0 }}");

	var is_model_updated = false;
	var is_sku_updated = false;
	var is_upc_updated = false;
	var is_ean_updated = false;
	var is_jan_updated = false;
	var is_isbn_updated = false;
	var is_mpn_updated = false;
	var is_location_updated = false;
	var is_dimension_updated = false;

	var is_image_updated = false;
	var is_quantity_updated = false;

	for (var i=0; i<advanced_option_elements.length; i++) {
		var $elem = $(advanced_option_elements[i]);
		var $selected_option;
		if ($elem.hasClass('type-select')) {
			$selected_option = $elem.find('.may-advanced-option option:selected');
		} else {
			$selected_option = $elem.find('.may-advanced-option:checked');
		}

		if (!$selected_option.length || $selected_option.data('option-value') == undefined) {
			if ($elem.hasClass('type-select')) {
				$elem.find('.may-advanced-option option').eq(0).prop('selected', true);
				$selected_option = $elem.find('.may-advanced-option option:selected');
			} else {
				$elem.find('.may-advanced-option').eq(0).prop('checked', true);
				$selected_option = $elem.find('.may-advanced-option:checked');
			}
			$elem.find('input[type=\'hidden\']').val($selected_option.val());
		}

		if (!$selected_option.length || $selected_option.data('option-value') == undefined) {
			continue;
		}

		var selected_option_value_id = $selected_option.data('option-value-id');
		if ($elem.hasClass('type-select')) {
			$('.may-advanced-option option[data-option-value-id="' + selected_option_value_id + '"]').prop('selected', true);
		} else {
			$('.may-advanced-option[data-option-value-id="' + selected_option_value_id + '"]').prop('checked', true);
		}

		var option_value = $selected_option.data('option-value');
		if (typeof option_value == 'string') {
			option_value = JSON.parse(option_value);
		}

		// Model
		if (!is_model_updated && option_value['model'] != undefined && option_value['model'] != "") {
			var option_value_model = option_value['model'];
			var $elem_model = $('#content ul.list-unstyled:first li.product-model span');
			if ($elem_model.length) {
				$elem_model.html(option_value_model);
			} else {
				$('#content ul.list-unstyled:first').append('<li class="product-model"><b>{{ may_advanced_options_language['text_model'] }}:</b> <span>' + option_value_model + '</span></li>');
			}
			$('input:hidden[name=\'option[model]\']').val(option_value_model);

			is_model_updated = true;
		}

		// SKU
		if (!is_sku_updated && option_value['sku'] != undefined && option_value['sku'] != "") {
			var option_value_sku = option_value['sku'];
			{% if not may_advanced_options_config['hide_pp_sku'] %}
			var $elem_sku = $('#content ul.list-unstyled:first li.product-sku span');
			if ($elem_sku.length) {
				$elem_sku.html(option_value_sku);
			} else {
				$('#content ul.list-unstyled:first').append('<li class="product-sku"><b>{{ may_advanced_options_language['text_sku'] }}:</b> <span>' + option_value_sku + '</span></li>');
			}
			{% endif %}
			$('input:hidden[name=\'option[sku]\']').val(option_value_sku);

			is_sku_updated = true;
		}

		// UPC
		if (!is_upc_updated && option_value['upc'] != undefined && option_value['upc'] != "") {
			var option_value_upc = option_value['upc'];
			{% if not may_advanced_options_config['hide_pp_upc'] %}
			var $elem_upc = $('#content ul.list-unstyled:first li.product-upc span');
			if ($elem_upc.length) {
				$elem_upc.html(option_value_upc);
			} else {
				$('#content ul.list-unstyled:first').append('<li class="product-upc"><b>{{ may_advanced_options_language['text_upc'] }}:</b> <span>' + option_value_upc + '</span></li>');
			}
			{% endif %}
			$('input:hidden[name=\'option[upc]\']').val(option_value_upc);

			is_upc_updated = true;
		}

		// EAN
		if (!is_ean_updated && option_value['ean'] != undefined && option_value['ean'] != "") {
			var option_value_ean = option_value['ean'];
			{% if not may_advanced_options_config['hide_pp_ean'] %}
			var $elem_ean = $('#content ul.list-unstyled:first li.product-ean span');
			if ($elem_ean.length) {
				$elem_ean.html(option_value_ean);
			} else {
				$('#content ul.list-unstyled:first').append('<li class="product-ean"><b>{{ may_advanced_options_language['text_ean'] }}:</b> <span>' + option_value_ean + '</span></li>');
			}
			{% endif %}
			$('input:hidden[name=\'option[ean]\']').val(option_value_ean);

			is_ean_updated = true;
		}

		// JAN
		if (!is_jan_updated && option_value['jan'] != undefined && option_value['jan'] != "") {
			var option_value_jan = option_value['jan'];
			{% if not may_advanced_options_config['hide_pp_jan'] %}
			var $elem_jan = $('#content ul.list-unstyled:first li.product-jan span');
			if ($elem_jan.length) {
				$elem_jan.html(option_value_jan);
			} else {
				$('#content ul.list-unstyled:first').append('<li class="product-jan"><b>{{ may_advanced_options_language['text_jan'] }}:</b> <span>' + option_value_jan + '</span></li>');
			}
			{% endif %}
			$('input:hidden[name=\'option[jan]\']').val(option_value_jan);

			is_jan_updated = true;
		}

		// ISBN
		if (!is_isbn_updated && option_value['isbn'] != undefined && option_value['isbn'] != "") {
			var option_value_isbn = option_value['isbn'];
			{% if not may_advanced_options_config['hide_pp_isbn'] %}
			var $elem_isbn = $('#content ul.list-unstyled:first li.product-isbn span');
			if ($elem_isbn.length) {
				$elem_isbn.html(option_value_isbn);
			} else {
				$('#content ul.list-unstyled:first').append('<li class="product-isbn"><b>{{ may_advanced_options_language['text_isbn'] }}:</b> <span>' + option_value_isbn + '</span></li>');
			}
			{% endif %}
			$('input:hidden[name=\'option[isbn]\']').val(option_value_isbn);

			is_isbn_updated = true;
		}

		// MPN
		if (!is_mpn_updated && option_value['mpn'] != undefined && option_value['mpn'] != "") {
			var option_value_mpn = option_value['mpn'];
			{% if not may_advanced_options_config['hide_pp_mpn'] %}
			var $elem_mpn = $('#content ul.list-unstyled:first li.product-mpn span');
			if ($elem_mpn.length) {
				$elem_mpn.html(option_value_mpn);
			} else {
				$('#content ul.list-unstyled:first').append('<li class="product-mpn"><b>{{ may_advanced_options_language['text_mpn'] }}:</b> <span>' + option_value_mpn + '</span></li>');
			}
			{% endif %}
			$('input:hidden[name=\'option[mpn]\']').val(option_value_mpn);

			is_mpn_updated = true;
		}

		// Location
		if (!is_location_updated && option_value['location'] != undefined && option_value['location'] != "") {
			var option_value_location = option_value['location'];
			{% if not may_advanced_options_config['hide_pp_location'] %}
			var $elem_location = $('#content ul.list-unstyled:first li.product-location span');
			if ($elem_location.length) {
				$elem_location.html(option_value_location);
			} else {
				$('#content ul.list-unstyled:first').append('<li class="product-location"><b>{{ may_advanced_options_language['text_location'] }}:</b> <span>' + option_value_location + '</span></li>');
			}
			{% endif %}
			$('input:hidden[name=\'option[location]\']').val(option_value_location);

			is_location_updated = true;
		}

		// Dimension
		if (!is_dimension_updated && option_value['dimension_l'] != undefined && option_value['dimension_l'] != "") {
			var option_value_dimension = convertNumberToString(option_value['dimension_l'], 2) + '{{ length_unit }}';
			if (option_value['dimension_w']) {
				option_value_dimension += ' x ' + convertNumberToString(option_value['dimension_w'], 2) + '{{ length_unit }}';
			}
			if (option_value['dimension_h']) {
				option_value_dimension += ' x ' + convertNumberToString(option_value['dimension_h'], 2) + '{{ length_unit }}';
			}
			{% if not may_advanced_options_config['hide_pp_dimension'] %}
			var $elem_dimension = $('#content ul.list-unstyled:first li.product-dimension span');
			if ($elem_dimension.length) {
				$elem_dimension.html(option_value_dimension);
			} else {
				$('#content ul.list-unstyled:first').append('<li class="product-dimension"><b>{{ may_advanced_options_language['text_dimension'] }}:</b> <span>' + option_value_dimension + '</span></li>');
			}
			{% endif %}
			$('input:hidden[name=\'option[dimension_l]\']').val(option_value['dimension_l']);
			$('input:hidden[name=\'option[dimension_w]\']').val(option_value['dimension_w']);
			$('input:hidden[name=\'option[dimension_h]\']').val(option_value['dimension_h']);

			is_dimension_updated = true;
		}

		// Quantity
		if (!is_quantity_updated && (option_value['subtract'] || option_value['quantity'])) {
			var option_value_quantity = option_value['quantity'];
			may_option_value_quantity = parseInt(option_value_quantity);
			if (option_value_quantity == 0 && option_value['subtract'] != 1) {
				option_value_quantity = '{{ stock }}';
				may_option_value_quantity = -1;
			}
			$('.product-stock span').html(option_value_quantity);

			is_quantity_updated = true;
		}

		// Product Images
		if (!is_image_updated && option_value['product_images'] != undefined) {
			var new_main_images = [];
			var new_additional_images = [];
			var new_gallery_images = [];
			var old_slide_index = [];
			option_value['product_images'].forEach(function(item, index) {
				if (item['origin'] == "") {
					return;
				}

				new_main_images.unshift('<div class="swiper-slide"' + (Journal['isPopup'] ? '' : (' data-gallery=".lightgallery-product-images" data-index="' + index + '"')) + '><img src="' + item['popup'] + '" data-largeimg="' + item['popup'] + '" alt="{{ heading_title }}" title="{{ heading_title }}"/></div>');

				var additions_carousel_class = (Journal['isPopup'] ? Journal['quickviewPageStyleAdditionalImagesCarousel'] : true) ? "swiper-slide" : "";

				new_additional_images.unshift('<div class="' + additions_carousel_class + ' additional-image" data-index="' + index + '"><img src="' + item['thumb'] + '" alt="{{ heading_title }}" title="{{ heading_title }}"/></div>');

				new_gallery_images.push({
					"src": item['popup'],
					"thumb": item['thumb']
				});
			});

			var main_swiper = $('.product-image .main-image').data('swiper');			
			for (var k=0;k<Math.min(main_swiper.slides.length, new_main_images.length);k++) {
				$('.product-image .main-image img').eq(k).data('imagezoom').destroy();
				old_slide_index.push(k);
			}
			main_swiper.removeSlide(old_slide_index);
			main_swiper.prependSlide(new_main_images);
			main_swiper.slideTo(0);
			$('.product-image .main-image').data('swiper', main_swiper);
			if (Journal['isPopup'] ? Journal['quickviewPageStyleCloudZoomStatus'] : Journal['productPageStyleCloudZoomStatus']) {
				$('.main-image img').each(function (item, index) {
					if (index >= new_main_images.length) {
						return;
					}

					var $this = $(this);
					$this.ImageZoom({
						type: Journal['isPopup'] ? Journal['quickviewPageStyleCloudZoomPosition'] : Journal['productPageStyleCloudZoomPosition'],
						showDescription: false,
						offset: [0, 0],
						zoomSize: [$this.width(), $this.height()],
						bigImageSrc: $this.data('largeimg')
					});
				});
			}

			if (Journal['isPopup'] ? Journal['quickviewPageStyleAdditionalImagesCarousel'] : true) {
				var additional_swiper = $('.product-image .additional-images').data('swiper');
				additional_swiper.removeSlide(old_slide_index);
				additional_swiper.prependSlide(new_additional_images);
				additional_swiper.slideTo(0);
				$('.product-image .additional-images').data('swiper', additional_swiper);
			} else {
				for (var k=0;k<old_slide_index.length;k++) {
					$('.product-image .additional-images .additional-image').eq(0).remove();
				}

				$('.product-image .additional-images').prepend(new_additional_images.reverse().join(''));
			}

			var light_gallery_images = $('.lightgallery-product-images').data('images');
			if (light_gallery_images != undefined && light_gallery_images.length) {
				light_gallery_images = new_gallery_images.concat(light_gallery_images.slice(old_slide_index.length));
				$('.lightgallery-product-images').data('images', light_gallery_images);
			}

			$('input:hidden[name=\'option[image]\']').val(option_value['product_images'][0]['origin']);

			is_image_updated = true;
		}

		{% if may_advanced_options_config['swatches'] %}
		// Update Labels
		var option_value_label = $selected_option.data('label');
		if (option_value_label != undefined) {
			$selected_option.closest('.type-swatches').find('span.selected-option-label').html(option_value_label != "" ? "- " + option_value_label : "");
		}
		{% endif %}


		// Update Prices
		if (option_value['price_prefix'] == "+") {
			if (option_value['price']) {
				price = price + convertPriceStringToNumber(option_value['price']);
				special = special + convertPriceStringToNumber(option_value['price']);
			}
			if (option_value['base_price']) {
				base_price = base_price + convertPriceStringToNumber(option_value['base_price']);
			}
		} else if (option_value['price_prefix'] == "-") {
			if (option_value['price']) {
				price = price - convertPriceStringToNumber(option_value['price']);
				special = special - convertPriceStringToNumber(option_value['price']);
			}
			if (option_value['base_price']) {
				base_price = base_price - convertPriceStringToNumber(option_value['base_price']);
			}
		}

		// Update Points
		if (option_value['point'] != undefined && option_value['point'] != "") {
			if (option_value['point_prefix'] == "+") {
				point = point + parseInt(option_value['point']);
			} else if (option_value['point_prefix'] == "-") {
				point = point - parseInt(option_value['point']);
			}
		}

		// Update Weight
		if (option_value['weight'] != undefined && option_value['weight'] != "") {
			if (option_value['weight_prefix'] == "+") {
				weight = weight + parseFloat(option_value['weight']);
			} else if (option_value['weight_prefix'] == "-") {
				weight = weight - parseFloat(option_value['weight']);
			}
		}
	}

	// Update Prices
	price = convertPriceNumberToString(price);
	special = convertPriceNumberToString(special);
	base_price = convertPriceNumberToString(base_price);
	
	{% if not special %}
	$('.product-price').html(price);
	{% else %}
	$('.product-price-new').html(special);
	$('.product-price-old').html(price);
	{% endif %} // not special
	{% if tax %}
	$('.product-tax').html("{{ text_tax }} " + base_price);
	{% endif %} // tax

	// Update Points
	var $elem_point = $('#content ul.list-unstyled:first li.product-reward span');
	if ($elem_point.length) {
		$elem_point.html(point);
	} else if (point) {
		$('#content ul.list-unstyled:first').append('<li class="product-reward"><b>{{ text_reward }}</b> <span>' + point + '</span></li>');
	}

	// Update Weight
	var $elem_weight = $('#content ul.list-unstyled:first li.product-weight span');
	if ($elem_weight.length) {
		$elem_weight.html(convertNumberToString(weight, 2) + '{{ weight_unit }}');
	} else if (weight) {
		$('#content ul.list-unstyled:first').append('<li class="product-weight"><b>{{ text_weight }}</b> <span>' + convertNumberToString(weight, 2) + '{{ weight_unit }}</span></li>');
	}
	$('input:hidden[name=\'option[weight]\']').val(convertNumberToString(weight, 2));

	return false;
});

$("#button-cart, [data-quick-buy]").each(function() {
	$(this).on("click", function (event) {
		var is_all_option_selected = true;
		$('.form-group.visible input[type="hidden"]').each(function() {
			if ($(this).val() == 0) {
				is_all_option_selected = false;
			}
		});

		if (is_all_option_selected && may_option_value_quantity != -1 && parseInt($('input[name="quantity"]').val()) > may_option_value_quantity) {
			$('.form-group.visible').removeClass('has-error');
			$('.form-group.visible .text-danger').remove();
			$('#error-quantity.has-error').remove();

			$('input[name="quantity"]').closest('.buttons-wrapper').after('<div id="error-quantity" class="has-error">{{ may_advanced_options_language['error_option_stock'] }}</div>');

			event.preventDefault();
			event.stopImmediatePropagation();
			return false;
		} else {
			$('#error-quantity.has-error').remove();
		}
	});
	var btnEvent = $._data($(this).get(0), 'events').click.pop();
	$._data($(this).get(0), 'events').click.unshift(btnEvent);
});
--></script>
